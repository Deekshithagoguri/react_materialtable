{"version":3,"sources":["logo.svg","Table.js","App.js","reportWebVitals.js","index.js"],"names":["Table","useState","name","user","email","phone","website","data","setData","title","columns","field","options","paging","editable","onRowAdd","newRow","Promise","resolve","reject","updatedRows","setTimeout","onRowDelete","selectedRow","index","tableData","id","splice","onRowUpdate","updatedRow","oldRow","actionsColumnIndex","addRowPosition","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAAe,I,iDCKFA,EAAO,WAEhB,IAMA,EAAsBC,mBANV,CACR,CAACC,KAAK,SAASC,KAAK,iBAAiBC,MAAM,0BAA0BC,MAAM,aAAaC,QAAQ,kBAChG,CAACJ,KAAK,UAAUC,KAAK,kBAAkBC,MAAM,2BAA2BC,MAAM,cAAcC,QAAQ,kBACpG,CAACJ,KAAK,SAASC,KAAK,cAAcC,MAAM,wBAAwBC,MAAM,YAAYC,QAAQ,oBAG9F,mBAAOC,EAAP,KAAYC,EAAZ,KAoBA,OACI,8BACG,cAAC,IAAD,aAAeC,MAAQ,iBACnBF,KAAMA,EACNG,QAvBG,CACV,CACID,MAAM,OAAOE,MAAM,QAEvB,CACIF,MAAM,WAAWE,MAAM,QAE3B,CACIF,MAAM,QAAQE,MAAM,SAGxB,CACIF,MAAM,QAAQE,MAAM,SAExB,CACIF,MAAM,UAAUE,MAAM,YASnBC,QACI,CAEIC,QAAO,GAKfC,SAAU,CAKNC,SAAS,SAACC,GAAD,OAAU,IAAIC,SAAQ,SAACC,EAAQC,GACvC,IAAMC,EAAY,GAAD,mBAAKb,GAAL,CAAUS,IAC3BK,YAAW,WACVb,EAASY,GACTF,MACC,SAKHI,YAAY,SAAAC,GAAW,OAAE,IAAIN,SAAQ,SAACC,EAAQC,GAC5C,IAAMK,EAASD,EAAYE,UAAUC,GAC/BN,EAAY,YAAIb,GACtBa,EAAYO,OAAOH,EAAM,GACzBH,YAAW,WACRb,EAAQY,GACXF,MACE,SAGJU,YAAY,SAACC,EAAWC,GAAZ,OAAqB,IAAIb,SAAQ,SAACC,EAAQC,GAClD,IAAMK,EAAMM,EAAOL,UAAUC,GACvBN,EAAY,YAAIb,GACtBa,EAAYI,GAAOK,EACnBR,YAAW,WACVb,EAAQY,GACXF,MACE,WA3CZ,UA+Ca,CACIa,oBAAoB,EAAEC,eAAe,c,OC9DlDC,MAdf,WACE,OACE,sBAAKC,UAAU,MAAf,UACC,2CAEL,cAAC,EAAD,QCAeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.363937e1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport { useState } from 'react'\r\nimport MaterialTable from 'material-table'\r\n\r\n\r\nexport const Table= ()=>{\r\n    \r\n    const dList=[\r\n        {name:'ramesh',user:'ramesh vangala',email:'rameshvangala@gamil.com',phone:'1234567889',website:'www.google.com'},\r\n        {name:'Indhira',user:'Indhira vangala',email:'indhiravangala@gamil.com',phone:'63985214521',website:'www.google.com'},\r\n        {name:'sumera',user:'sumeraminaz',email:'sumeraminaz@gamil.com',phone:'987456159',website:'www.google.com'}\r\n\r\n    ]\r\n    const [data,setData]= useState(dList)\r\n    const columns=[\r\n        {\r\n            title:'Name',field:'name'\r\n        },\r\n        {\r\n            title:'Username',field:'user'\r\n        },\r\n        {\r\n            title:'Email',field:'email'\r\n           \r\n        },\r\n        {\r\n            title:'phone',field:'phone'\r\n        },\r\n        {\r\n            title:'website',field:'website'\r\n        },\r\n\r\n    ]\r\n    return(\r\n        <div>\r\n           <MaterialTable title = \"Material Table\"\r\n               data={data}\r\n               columns={columns}\r\n               options={\r\n                   {\r\n                       \r\n                       paging:false,\r\n                       \r\n                   }\r\n\r\n               }\r\n               editable={{\r\n                   \r\n               \r\n                   \r\n        \r\n                   onRowAdd:(newRow)=>new Promise((resolve,reject)=>{\r\n                    const updatedRows=[...data,newRow] \r\n                    setTimeout(()=>{\r\n                     setData (updatedRows)\r\n                     resolve()\r\n                    },2000)\r\n\r\n                    \r\n                    \r\n                   }),\r\n                   onRowDelete:selectedRow=>new Promise((resolve,reject)=>{\r\n                     const index =  selectedRow.tableData.id;\r\n                     const updatedRows=[...data]\r\n                     updatedRows.splice(index,1)\r\n                     setTimeout(()=>{\r\n                        setData(updatedRows)\r\n                     resolve()\r\n                     },2000)\r\n                     \r\n                   }),\r\n                   onRowUpdate:(updatedRow,oldRow)=>new Promise((resolve,reject)=>{\r\n                       const index=oldRow.tableData.id;\r\n                       const updatedRows=[...data]\r\n                       updatedRows[index]=updatedRow\r\n                       setTimeout(()=>{\r\n                        setData(updatedRows)\r\n                     resolve()\r\n                     },2000)\r\n\r\n                   })\r\n               }}\r\n               options={{\r\n                            actionsColumnIndex:-1,addRowPosition:\"first\"\r\n               }}\r\n           />\r\n        </div>\r\n    );\r\n}","import React from 'react';\n\nimport logo from './logo.svg';\nimport { Table } from './Table';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <h2>React App</h2>\n    \n<Table />\n\n\n\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}